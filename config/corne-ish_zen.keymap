/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/matrix_transform.h>

#define DEFAULT   0
#define NUMBER    1
#define SYMBOL    2

/ {
        chosen {
                zmk,matrix_transform = &five_column_transform;
        };
        
        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <0 1>;
                        bindings = <&kp ESC>;
                };    
        };

        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick_tap_ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// -------------------------------   --------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
// ------------| GUI | LWR | SPC |   | ENT | RSE  | ALT |------------
                        bindings = <
    &kp Q       &kp W      &kp E              &kp R            &kp T            &kp Y     &kp U          &kp I               &kp O      &kp P
    &hm LCTRL A &hm LALT S &hm LEFT_COMMAND D &hm LSHFT F      &kp G            &kp H     &hm RSHFT J    &hm RIGHT_COMMAND K &hm RALT L &hm RCTRL SEMI
    &kp Z       &kp X      &kp C              &kp V            &kp B            &kp N     &kp M          &kp COMMA           &kp DOT    &kp FSLH
                           &caps_word          &lt SYMBOL TAB   &kp BSPC         &kp SPACE &lt NUMBER RET &mo 2
                        >;
                };
                number_layer {
                        label = "NUMBER";
// -------------------------------   -------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |
// |     |     |     |     |     |   |     |     |     |     |     |
// ------------| GUI |     | SPC |   | ENT |     | ALT |------------
                        bindings = <
   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5              &kp N6   &kp N7    &kp N8 &kp N9    &kp N0
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &kp LEFT &kp DOWN  &kp UP &kp RIGHT &trans
   &bt BT_CLR   &trans       &trans       &trans       &trans              &trans   &trans    &trans &trans    &trans
                             &trans       &trans       &trans              &trans   &trans    &trans
                        >;
                };

                symbol_layer {
                        label = "SYMBOL";
// -------------------------------    -------------------------------
// |  !  |  @  |  #  |  $  |  %  |    |  ^  |  &  |  *  |  (  |  )  |
// |  `  |  '  |     |     |     |    |  -  |  =  |  [  |  ]  |  \  |
// |  ~  |  "  |     |     |     |    |  _  |  +  |  {  |  }  | "|" |
// ------------| GUI |     | SPC |    | ENT |     | ALT |------------
                        bindings = <
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR
   &trans   &trans &trans   &trans   &trans           &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH
   &reset   &trans &trans   &trans   &trans           &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE
                   &trans   &trans   &trans           &trans    &trans    &trans
                        >;
                };
        };
};
